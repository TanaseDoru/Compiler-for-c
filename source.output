Grammar

    0 $accept: program $end

    1 program: function_declaration functions
    2        | instructions
    3        | T_ERROR

    4 functions: ε
    5          | functions function_declaration

    6 $@1: ε

    7 $@2: ε

    8 $@3: ε

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 instructions '}'

   10 $@4: ε

   11 $@5: ε

   12 $@6: ε

   13 function_declaration: type T_IDENTIFIER $@4 '(' $@5 parameter_list ')' '{' $@6 instructions '}'

   14 parameter_list: ε
   15               | type T_IDENTIFIER parameter_list_tail

   16 parameter_list_tail: ε
   17                    | ',' type T_IDENTIFIER parameter_list_tail

   18 midrule_lbs: ε

   19 function_call: T_IDENTIFIER midrule_lbs '(' argument_list ')'

   20 argument_list: ε
   21              | expression argument_list_tail

   22 argument_list_tail: ε
   23                   | ',' expression argument_list_tail

   24 instructions: ε
   25             | instruction ';' instructions

   26 $@7: ε

   27 $@8: ε

   28 $@9: ε

   29 $@10: ε

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

   31 $@11: ε

   32 $@12: ε

   33 $@13: ε

   34 $@14: ε

   35 instructions: T_WHILE_KW $@11 '(' expression ')' $@12 '{' $@13 instructions '}' $@14 instructions

   36 $@15: ε

   37 $@16: ε

   38 instructions: '{' $@15 instructions '}' $@16 instructions

   39 instruction: ε
   40            | T_COMM
   41            | function_call
   42            | T_RETURN expression
   43            | declarations
   44            | variable_load
   45            | T_PRINTF_SIMPLE
   46            | T_PRINTF_PARAM
   47            | T_SCANF

   48 declarations: declaration
   49             | declaration declarations

   50 declaration: type variable_list

   51 type: T_INT_KW
   52     | T_DOUBLE_KW
   53     | T_FLOAT_KW

   54 variable_list: variable_declaration
   55              | variable_declaration ',' variable_list

   56 variable_declaration: T_IDENTIFIER
   57                     | T_IDENTIFIER '=' expression

   58 variable_load: T_IDENTIFIER '=' expression

   59 expression: T_IDENTIFIER
   60           | T_DOUBLE_VAL
   61           | T_INTEGER_VAL
   62           | expression '+' expression
   63           | expression '-' expression
   64           | expression '*' expression
   65           | expression '/' expression
   66           | expression '<' expression
   67           | expression T_LE expression
   68           | expression '>' expression
   69           | expression T_GE expression
   70           | expression T_EQ expression
   71           | expression T_NEQ expression
   72           | '(' expression ')'
   73           | function_call


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 13 19 30 35 72
    ')' (41) 9 13 19 30 35 72
    '*' (42) 64
    '+' (43) 62
    ',' (44) 17 23 55
    '-' (45) 63
    '/' (47) 65
    ';' (59) 25
    '<' (60) 66
    '=' (61) 57 58
    '>' (62) 68
    '{' (123) 9 13 30 35 38
    '}' (125) 9 13 30 35 38
    error (256)
    T_EQ (258) 70
    T_LE (259) 67
    T_GE (260) 69
    T_NEQ (261) 71
    T_INT_KW (262) 51
    T_FLOAT_KW (263) 53
    T_DOUBLE_KW (264) 52
    T_IF_KW <lbVal> (265) 30
    T_WHILE_KW <lbVal> (266) 35
    T_ELSE_KW (267) 30
    T_VOID_KW (268) 9
    T_RETURN (269) 42
    T_COMM (270) 40
    T_ERROR (271) 3
    T_PRINTF_PARAM <str> (272) 46
    T_PRINTF_SIMPLE <str> (273) 45
    T_SCANF <str> (274) 47
    T_INTEGER_VAL <intval> (275) 61
    T_IDENTIFIER <str> (276) 9 13 15 17 19 56 57 58 59
    T_DOUBLE_VAL <dval> (277) 60


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1 2 3
        on right: 0
    functions (38)
        on left: 4 5
        on right: 1 5
    function_declaration (39)
        on left: 9 13
        on right: 1 5
    $@1 (40)
        on left: 6
        on right: 9
    $@2 (41)
        on left: 7
        on right: 9
    $@3 (42)
        on left: 8
        on right: 9
    $@4 (43)
        on left: 10
        on right: 13
    $@5 (44)
        on left: 11
        on right: 13
    $@6 (45)
        on left: 12
        on right: 13
    parameter_list (46)
        on left: 14 15
        on right: 9 13
    parameter_list_tail (47)
        on left: 16 17
        on right: 15 17
    midrule_lbs <lbVal> (48)
        on left: 18
        on right: 19
    function_call (49)
        on left: 19
        on right: 41 73
    argument_list (50)
        on left: 20 21
        on right: 19
    argument_list_tail (51)
        on left: 22 23
        on right: 21 23
    instructions (52)
        on left: 24 25 30 35 38
        on right: 2 9 13 25 30 35 38
    $@7 (53)
        on left: 26
        on right: 30
    $@8 (54)
        on left: 27
        on right: 30
    $@9 (55)
        on left: 28
        on right: 30
    $@10 (56)
        on left: 29
        on right: 30
    $@11 (57)
        on left: 31
        on right: 35
    $@12 (58)
        on left: 32
        on right: 35
    $@13 (59)
        on left: 33
        on right: 35
    $@14 (60)
        on left: 34
        on right: 35
    $@15 (61)
        on left: 36
        on right: 38
    $@16 (62)
        on left: 37
        on right: 38
    instruction (63)
        on left: 39 40 41 42 43 44 45 46 47
        on right: 25
    declarations (64)
        on left: 48 49
        on right: 43 49
    declaration (65)
        on left: 50
        on right: 48 49
    type (66)
        on left: 51 52 53
        on right: 13 15 17 50
    variable_list (67)
        on left: 54 55
        on right: 50 55
    variable_declaration (68)
        on left: 56 57
        on right: 54 55
    variable_load (69)
        on left: 58
        on right: 44
    expression <dval> (70)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 21 23 30 35 42 57 58 62 63 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: • program $end

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_VOID_KW        shift, and go to state 6
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_ERROR          shift, and go to state 9
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    program               go to state 15
    function_declaration  go to state 16
    function_call         go to state 17
    instructions          go to state 18
    instruction           go to state 19
    declarations          go to state 20
    declaration           go to state 21
    type                  go to state 22
    variable_load         go to state 23


State 1

   51 type: T_INT_KW •

    $default  reduce using rule 51 (type)


State 2

   53 type: T_FLOAT_KW •

    $default  reduce using rule 53 (type)


State 3

   52 type: T_DOUBLE_KW •

    $default  reduce using rule 52 (type)


State 4

   30 instructions: T_IF_KW • '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

    '('  shift, and go to state 24


State 5

   35 instructions: T_WHILE_KW • $@11 '(' expression ')' $@12 '{' $@13 instructions '}' $@14 instructions

    $default  reduce using rule 31 ($@11)

    $@11  go to state 25


State 6

    9 function_declaration: T_VOID_KW • T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 instructions '}'

    T_IDENTIFIER  shift, and go to state 26


State 7

   42 instruction: T_RETURN • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 32


State 8

   40 instruction: T_COMM •

    $default  reduce using rule 40 (instruction)


State 9

    3 program: T_ERROR •

    $default  reduce using rule 3 (program)


State 10

   46 instruction: T_PRINTF_PARAM •

    $default  reduce using rule 46 (instruction)


State 11

   45 instruction: T_PRINTF_SIMPLE •

    $default  reduce using rule 45 (instruction)


State 12

   47 instruction: T_SCANF •

    $default  reduce using rule 47 (instruction)


State 13

   19 function_call: T_IDENTIFIER • midrule_lbs '(' argument_list ')'
   58 variable_load: T_IDENTIFIER • '=' expression

    '='  shift, and go to state 33

    $default  reduce using rule 18 (midrule_lbs)

    midrule_lbs  go to state 34


State 14

   38 instructions: '{' • $@15 instructions '}' $@16 instructions

    $default  reduce using rule 36 ($@15)

    $@15  go to state 35


State 15

    0 $accept: program • $end

    $end  shift, and go to state 36


State 16

    1 program: function_declaration • functions

    $default  reduce using rule 4 (functions)

    functions  go to state 37


State 17

   41 instruction: function_call •

    $default  reduce using rule 41 (instruction)


State 18

    2 program: instructions •

    $default  reduce using rule 2 (program)


State 19

   25 instructions: instruction • ';' instructions

    ';'  shift, and go to state 38


State 20

   43 instruction: declarations •

    $default  reduce using rule 43 (instruction)


State 21

   48 declarations: declaration •
   49             | declaration • declarations

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3

    $default  reduce using rule 48 (declarations)

    declarations  go to state 39
    declaration   go to state 21
    type          go to state 40


State 22

   13 function_declaration: type • T_IDENTIFIER $@4 '(' $@5 parameter_list ')' '{' $@6 instructions '}'
   50 declaration: type • variable_list

    T_IDENTIFIER  shift, and go to state 41

    variable_list         go to state 42
    variable_declaration  go to state 43


State 23

   44 instruction: variable_load •

    $default  reduce using rule 44 (instruction)


State 24

   30 instructions: T_IF_KW '(' • expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 44


State 25

   35 instructions: T_WHILE_KW $@11 • '(' expression ')' $@12 '{' $@13 instructions '}' $@14 instructions

    '('  shift, and go to state 45


State 26

    9 function_declaration: T_VOID_KW T_IDENTIFIER • $@1 '(' $@2 parameter_list ')' '{' $@3 instructions '}'

    $default  reduce using rule 6 ($@1)

    $@1  go to state 46


State 27

   61 expression: T_INTEGER_VAL •

    $default  reduce using rule 61 (expression)


State 28

   19 function_call: T_IDENTIFIER • midrule_lbs '(' argument_list ')'
   59 expression: T_IDENTIFIER •

    '('       reduce using rule 18 (midrule_lbs)
    $default  reduce using rule 59 (expression)

    midrule_lbs  go to state 34


State 29

   60 expression: T_DOUBLE_VAL •

    $default  reduce using rule 60 (expression)


State 30

   72 expression: '(' • expression ')'

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 47


State 31

   73 expression: function_call •

    $default  reduce using rule 73 (expression)


State 32

   42 instruction: T_RETURN expression •
   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    T_EQ   shift, and go to state 48
    T_LE   shift, and go to state 49
    T_GE   shift, and go to state 50
    T_NEQ  shift, and go to state 51
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '>'    shift, and go to state 54
    '<'    shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57

    $default  reduce using rule 42 (instruction)


State 33

   58 variable_load: T_IDENTIFIER '=' • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 58


State 34

   19 function_call: T_IDENTIFIER midrule_lbs • '(' argument_list ')'

    '('  shift, and go to state 59


State 35

   38 instructions: '{' $@15 • instructions '}' $@16 instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 60
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 36

    0 $accept: program $end •

    $default  accept


State 37

    1 program: function_declaration functions •
    5 functions: functions • function_declaration

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3
    T_VOID_KW    shift, and go to state 6

    $default  reduce using rule 1 (program)

    function_declaration  go to state 61
    type                  go to state 62


State 38

   25 instructions: instruction ';' • instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 63
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 39

   49 declarations: declaration declarations •

    $default  reduce using rule 49 (declarations)


State 40

   50 declaration: type • variable_list

    T_IDENTIFIER  shift, and go to state 64

    variable_list         go to state 42
    variable_declaration  go to state 43


State 41

   13 function_declaration: type T_IDENTIFIER • $@4 '(' $@5 parameter_list ')' '{' $@6 instructions '}'
   56 variable_declaration: T_IDENTIFIER •
   57                     | T_IDENTIFIER • '=' expression

    '='  shift, and go to state 65

    '('       reduce using rule 10 ($@4)
    $default  reduce using rule 56 (variable_declaration)

    $@4  go to state 66


State 42

   50 declaration: type variable_list •

    $default  reduce using rule 50 (declaration)


State 43

   54 variable_list: variable_declaration •
   55              | variable_declaration • ',' variable_list

    ','  shift, and go to state 67

    $default  reduce using rule 54 (variable_list)


State 44

   30 instructions: T_IF_KW '(' expression • ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions
   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    T_EQ   shift, and go to state 48
    T_LE   shift, and go to state 49
    T_GE   shift, and go to state 50
    T_NEQ  shift, and go to state 51
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '>'    shift, and go to state 54
    '<'    shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    ')'    shift, and go to state 68


State 45

   35 instructions: T_WHILE_KW $@11 '(' • expression ')' $@12 '{' $@13 instructions '}' $@14 instructions

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 69


State 46

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 • '(' $@2 parameter_list ')' '{' $@3 instructions '}'

    '('  shift, and go to state 70


State 47

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression
   72           | '(' expression • ')'

    T_EQ   shift, and go to state 48
    T_LE   shift, and go to state 49
    T_GE   shift, and go to state 50
    T_NEQ  shift, and go to state 51
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '>'    shift, and go to state 54
    '<'    shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    ')'    shift, and go to state 71


State 48

   70 expression: expression T_EQ • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 72


State 49

   67 expression: expression T_LE • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 73


State 50

   69 expression: expression T_GE • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 74


State 51

   71 expression: expression T_NEQ • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 75


State 52

   62 expression: expression '+' • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 76


State 53

   63 expression: expression '-' • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 77


State 54

   68 expression: expression '>' • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 78


State 55

   66 expression: expression '<' • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 79


State 56

   64 expression: expression '*' • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 80


State 57

   65 expression: expression '/' • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 81


State 58

   58 variable_load: T_IDENTIFIER '=' expression •
   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    T_EQ   shift, and go to state 48
    T_LE   shift, and go to state 49
    T_GE   shift, and go to state 50
    T_NEQ  shift, and go to state 51
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '>'    shift, and go to state 54
    '<'    shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57

    $default  reduce using rule 58 (variable_load)


State 59

   19 function_call: T_IDENTIFIER midrule_lbs '(' • argument_list ')'

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    $default  reduce using rule 20 (argument_list)

    function_call  go to state 31
    argument_list  go to state 82
    expression     go to state 83


State 60

   38 instructions: '{' $@15 instructions • '}' $@16 instructions

    '}'  shift, and go to state 84


State 61

    5 functions: functions function_declaration •

    $default  reduce using rule 5 (functions)


State 62

   13 function_declaration: type • T_IDENTIFIER $@4 '(' $@5 parameter_list ')' '{' $@6 instructions '}'

    T_IDENTIFIER  shift, and go to state 85


State 63

   25 instructions: instruction ';' instructions •

    $default  reduce using rule 25 (instructions)


State 64

   56 variable_declaration: T_IDENTIFIER •
   57                     | T_IDENTIFIER • '=' expression

    '='  shift, and go to state 65

    $default  reduce using rule 56 (variable_declaration)


State 65

   57 variable_declaration: T_IDENTIFIER '=' • expression

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 86


State 66

   13 function_declaration: type T_IDENTIFIER $@4 • '(' $@5 parameter_list ')' '{' $@6 instructions '}'

    '('  shift, and go to state 87


State 67

   55 variable_list: variable_declaration ',' • variable_list

    T_IDENTIFIER  shift, and go to state 64

    variable_list         go to state 88
    variable_declaration  go to state 43


State 68

   30 instructions: T_IF_KW '(' expression ')' • $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

    $default  reduce using rule 26 ($@7)

    $@7  go to state 89


State 69

   35 instructions: T_WHILE_KW $@11 '(' expression • ')' $@12 '{' $@13 instructions '}' $@14 instructions
   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    T_EQ   shift, and go to state 48
    T_LE   shift, and go to state 49
    T_GE   shift, and go to state 50
    T_NEQ  shift, and go to state 51
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '>'    shift, and go to state 54
    '<'    shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    ')'    shift, and go to state 90


State 70

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' • $@2 parameter_list ')' '{' $@3 instructions '}'

    $default  reduce using rule 7 ($@2)

    $@2  go to state 91


State 71

   72 expression: '(' expression ')' •

    $default  reduce using rule 72 (expression)


State 72

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   70           | expression T_EQ expression •
   71           | expression • T_NEQ expression

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 70 (expression)


State 73

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   67           | expression T_LE expression •
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 67 (expression)


State 74

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   69           | expression T_GE expression •
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 69 (expression)


State 75

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression
   71           | expression T_NEQ expression •

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 71 (expression)


State 76

   62 expression: expression • '+' expression
   62           | expression '+' expression •
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 62 (expression)


State 77

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   63           | expression '-' expression •
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 63 (expression)


State 78

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   68           | expression '>' expression •
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 68 (expression)


State 79

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   66           | expression '<' expression •
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 66 (expression)


State 80

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   64           | expression '*' expression •
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    $default  reduce using rule 64 (expression)


State 81

   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   65           | expression '/' expression •
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    $default  reduce using rule 65 (expression)


State 82

   19 function_call: T_IDENTIFIER midrule_lbs '(' argument_list • ')'

    ')'  shift, and go to state 92


State 83

   21 argument_list: expression • argument_list_tail
   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    T_EQ   shift, and go to state 48
    T_LE   shift, and go to state 49
    T_GE   shift, and go to state 50
    T_NEQ  shift, and go to state 51
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '>'    shift, and go to state 54
    '<'    shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    ','    shift, and go to state 93

    $default  reduce using rule 22 (argument_list_tail)

    argument_list_tail  go to state 94


State 84

   38 instructions: '{' $@15 instructions '}' • $@16 instructions

    $default  reduce using rule 37 ($@16)

    $@16  go to state 95


State 85

   13 function_declaration: type T_IDENTIFIER • $@4 '(' $@5 parameter_list ')' '{' $@6 instructions '}'

    $default  reduce using rule 10 ($@4)

    $@4  go to state 66


State 86

   57 variable_declaration: T_IDENTIFIER '=' expression •
   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    T_EQ   shift, and go to state 48
    T_LE   shift, and go to state 49
    T_GE   shift, and go to state 50
    T_NEQ  shift, and go to state 51
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '>'    shift, and go to state 54
    '<'    shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57

    $default  reduce using rule 57 (variable_declaration)


State 87

   13 function_declaration: type T_IDENTIFIER $@4 '(' • $@5 parameter_list ')' '{' $@6 instructions '}'

    $default  reduce using rule 11 ($@5)

    $@5  go to state 96


State 88

   55 variable_list: variable_declaration ',' variable_list •

    $default  reduce using rule 55 (variable_list)


State 89

   30 instructions: T_IF_KW '(' expression ')' $@7 • '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

    '{'  shift, and go to state 97


State 90

   35 instructions: T_WHILE_KW $@11 '(' expression ')' • $@12 '{' $@13 instructions '}' $@14 instructions

    $default  reduce using rule 32 ($@12)

    $@12  go to state 98


State 91

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' $@2 • parameter_list ')' '{' $@3 instructions '}'

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3

    $default  reduce using rule 14 (parameter_list)

    parameter_list  go to state 99
    type            go to state 100


State 92

   19 function_call: T_IDENTIFIER midrule_lbs '(' argument_list ')' •

    $default  reduce using rule 19 (function_call)


State 93

   23 argument_list_tail: ',' • expression argument_list_tail

    T_INTEGER_VAL  shift, and go to state 27
    T_IDENTIFIER   shift, and go to state 28
    T_DOUBLE_VAL   shift, and go to state 29
    '('            shift, and go to state 30

    function_call  go to state 31
    expression     go to state 101


State 94

   21 argument_list: expression argument_list_tail •

    $default  reduce using rule 21 (argument_list)


State 95

   38 instructions: '{' $@15 instructions '}' $@16 • instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 102
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 96

   13 function_declaration: type T_IDENTIFIER $@4 '(' $@5 • parameter_list ')' '{' $@6 instructions '}'

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3

    $default  reduce using rule 14 (parameter_list)

    parameter_list  go to state 103
    type            go to state 100


State 97

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' • instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 104
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 98

   35 instructions: T_WHILE_KW $@11 '(' expression ')' $@12 • '{' $@13 instructions '}' $@14 instructions

    '{'  shift, and go to state 105


State 99

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' $@2 parameter_list • ')' '{' $@3 instructions '}'

    ')'  shift, and go to state 106


State 100

   15 parameter_list: type • T_IDENTIFIER parameter_list_tail

    T_IDENTIFIER  shift, and go to state 107


State 101

   23 argument_list_tail: ',' expression • argument_list_tail
   62 expression: expression • '+' expression
   63           | expression • '-' expression
   64           | expression • '*' expression
   65           | expression • '/' expression
   66           | expression • '<' expression
   67           | expression • T_LE expression
   68           | expression • '>' expression
   69           | expression • T_GE expression
   70           | expression • T_EQ expression
   71           | expression • T_NEQ expression

    T_EQ   shift, and go to state 48
    T_LE   shift, and go to state 49
    T_GE   shift, and go to state 50
    T_NEQ  shift, and go to state 51
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '>'    shift, and go to state 54
    '<'    shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    ','    shift, and go to state 93

    $default  reduce using rule 22 (argument_list_tail)

    argument_list_tail  go to state 108


State 102

   38 instructions: '{' $@15 instructions '}' $@16 instructions •

    $default  reduce using rule 38 (instructions)


State 103

   13 function_declaration: type T_IDENTIFIER $@4 '(' $@5 parameter_list • ')' '{' $@6 instructions '}'

    ')'  shift, and go to state 109


State 104

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions • '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

    '}'  shift, and go to state 110


State 105

   35 instructions: T_WHILE_KW $@11 '(' expression ')' $@12 '{' • $@13 instructions '}' $@14 instructions

    $default  reduce using rule 33 ($@13)

    $@13  go to state 111


State 106

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' $@2 parameter_list ')' • '{' $@3 instructions '}'

    '{'  shift, and go to state 112


State 107

   15 parameter_list: type T_IDENTIFIER • parameter_list_tail

    ','  shift, and go to state 113

    $default  reduce using rule 16 (parameter_list_tail)

    parameter_list_tail  go to state 114


State 108

   23 argument_list_tail: ',' expression argument_list_tail •

    $default  reduce using rule 23 (argument_list_tail)


State 109

   13 function_declaration: type T_IDENTIFIER $@4 '(' $@5 parameter_list ')' • '{' $@6 instructions '}'

    '{'  shift, and go to state 115


State 110

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' • $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

    $default  reduce using rule 27 ($@8)

    $@8  go to state 116


State 111

   35 instructions: T_WHILE_KW $@11 '(' expression ')' $@12 '{' $@13 • instructions '}' $@14 instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 117
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 112

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' • $@3 instructions '}'

    $default  reduce using rule 8 ($@3)

    $@3  go to state 118


State 113

   17 parameter_list_tail: ',' • type T_IDENTIFIER parameter_list_tail

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3

    type  go to state 119


State 114

   15 parameter_list: type T_IDENTIFIER parameter_list_tail •

    $default  reduce using rule 15 (parameter_list)


State 115

   13 function_declaration: type T_IDENTIFIER $@4 '(' $@5 parameter_list ')' '{' • $@6 instructions '}'

    $default  reduce using rule 12 ($@6)

    $@6  go to state 120


State 116

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 • T_ELSE_KW $@9 '{' instructions '}' $@10 instructions

    T_ELSE_KW  shift, and go to state 121


State 117

   35 instructions: T_WHILE_KW $@11 '(' expression ')' $@12 '{' $@13 instructions • '}' $@14 instructions

    '}'  shift, and go to state 122


State 118

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 • instructions '}'

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 123
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 119

   17 parameter_list_tail: ',' type • T_IDENTIFIER parameter_list_tail

    T_IDENTIFIER  shift, and go to state 124


State 120

   13 function_declaration: type T_IDENTIFIER $@4 '(' $@5 parameter_list ')' '{' $@6 • instructions '}'

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 125
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 121

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW • $@9 '{' instructions '}' $@10 instructions

    $default  reduce using rule 28 ($@9)

    $@9  go to state 126


State 122

   35 instructions: T_WHILE_KW $@11 '(' expression ')' $@12 '{' $@13 instructions '}' • $@14 instructions

    $default  reduce using rule 34 ($@14)

    $@14  go to state 127


State 123

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 instructions • '}'

    '}'  shift, and go to state 128


State 124

   17 parameter_list_tail: ',' type T_IDENTIFIER • parameter_list_tail

    ','  shift, and go to state 113

    $default  reduce using rule 16 (parameter_list_tail)

    parameter_list_tail  go to state 129


State 125

   13 function_declaration: type T_IDENTIFIER $@4 '(' $@5 parameter_list ')' '{' $@6 instructions • '}'

    '}'  shift, and go to state 130


State 126

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 • '{' instructions '}' $@10 instructions

    '{'  shift, and go to state 131


State 127

   35 instructions: T_WHILE_KW $@11 '(' expression ')' $@12 '{' $@13 instructions '}' $@14 • instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 132
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 128

    9 function_declaration: T_VOID_KW T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 instructions '}' •

    $default  reduce using rule 9 (function_declaration)


State 129

   17 parameter_list_tail: ',' type T_IDENTIFIER parameter_list_tail •

    $default  reduce using rule 17 (parameter_list_tail)


State 130

   13 function_declaration: type T_IDENTIFIER $@4 '(' $@5 parameter_list ')' '{' $@6 instructions '}' •

    $default  reduce using rule 13 (function_declaration)


State 131

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' • instructions '}' $@10 instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 133
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 132

   35 instructions: T_WHILE_KW $@11 '(' expression ')' $@12 '{' $@13 instructions '}' $@14 instructions •

    $default  reduce using rule 35 (instructions)


State 133

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions • '}' $@10 instructions

    '}'  shift, and go to state 134


State 134

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' • $@10 instructions

    $default  reduce using rule 29 ($@10)

    $@10  go to state 135


State 135

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 • instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 7
    T_COMM           shift, and go to state 8
    T_PRINTF_PARAM   shift, and go to state 10
    T_PRINTF_SIMPLE  shift, and go to state 11
    T_SCANF          shift, and go to state 12
    T_IDENTIFIER     shift, and go to state 13
    '{'              shift, and go to state 14

    ';'       reduce using rule 39 (instruction)
    $default  reduce using rule 24 (instructions)

    function_call  go to state 17
    instructions   go to state 136
    instruction    go to state 19
    declarations   go to state 20
    declaration    go to state 21
    type           go to state 40
    variable_load  go to state 23


State 136

   30 instructions: T_IF_KW '(' expression ')' $@7 '{' instructions '}' $@8 T_ELSE_KW $@9 '{' instructions '}' $@10 instructions •

    $default  reduce using rule 30 (instructions)
