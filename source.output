Terminals unused in grammar

    T_VOID_KW


Rules useless in parser due to conflicts

    4 functions: ε


State 0 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions function_declaration
    2        | instructions
    3        | T_ERROR

    4 functions: ε
    5          | functions function_declaration

    6 $@1: ε

    7 $@2: ε

    8 $@3: ε

    9 function_declaration: type T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 instructions '}'

   10 parameter_list: ε
   11               | type T_IDENTIFIER parameter_list_tail

   12 parameter_list_tail: ε
   13                    | ',' type T_IDENTIFIER parameter_list_tail

   14 midrule_lbs: ε

   15 function_call: T_IDENTIFIER midrule_lbs '(' argument_list ')'

   16 argument_list: ε
   17              | expression argument_list_tail

   18 argument_list_tail: ε
   19                   | ',' expression argument_list_tail

   20 instructions: ε
   21             | instruction ';' instructions

   22 $@4: ε

   23 $@5: ε

   24 $@6: ε

   25 $@7: ε

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

   27 $@8: ε

   28 $@9: ε

   29 $@10: ε

   30 $@11: ε

   31 instructions: T_WHILE_KW $@8 '(' expression ')' $@9 '{' $@10 instructions '}' $@11 instructions

   32 $@12: ε

   33 $@13: ε

   34 instructions: '{' $@12 instructions '}' $@13 instructions

   35 instruction: ε
   36            | T_RETURN expression
   37            | declarations
   38            | variable_load
   39            | T_PRINTF_SIMPLE
   40            | T_PRINTF_PARAM
   41            | T_SCANF

   42 declarations: declaration
   43             | declaration declarations

   44 declaration: type variable_list

   45 type: T_INT_KW
   46     | T_DOUBLE_KW
   47     | T_FLOAT_KW

   48 variable_list: variable_declaration
   49              | variable_declaration ',' variable_list

   50 variable_declaration: T_IDENTIFIER
   51                     | T_IDENTIFIER '=' expression

   52 variable_load: T_IDENTIFIER '=' expression

   53 expression: T_IDENTIFIER
   54           | T_DOUBLE_VAL
   55           | T_INTEGER_VAL
   56           | expression '+' expression
   57           | expression '-' expression
   58           | expression '*' expression
   59           | expression '/' expression
   60           | expression '<' expression
   61           | expression T_LE expression
   62           | expression '>' expression
   63           | expression T_GE expression
   64           | expression T_EQ expression
   65           | expression T_NEQ expression
   66           | '(' expression ')'
   67           | function_call


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 15 26 31 66
    ')' (41) 9 15 26 31 66
    '*' (42) 58
    '+' (43) 56
    ',' (44) 13 19 49
    '-' (45) 57
    '/' (47) 59
    ';' (59) 21
    '<' (60) 60
    '=' (61) 51 52
    '>' (62) 62
    '{' (123) 9 26 31 34
    '}' (125) 9 26 31 34
    error (256)
    T_EQ (258) 64
    T_LE (259) 61
    T_GE (260) 63
    T_NEQ (261) 65
    T_INT_KW (262) 45
    T_FLOAT_KW (263) 47
    T_DOUBLE_KW (264) 46
    T_IF_KW <lbVal> (265) 26
    T_WHILE_KW <lbVal> (266) 31
    T_ELSE_KW (267) 26
    T_VOID_KW (268)
    T_RETURN (269) 36
    T_ERROR (270) 3
    T_PRINTF_PARAM <str> (271) 40
    T_PRINTF_SIMPLE <str> (272) 39
    T_SCANF <str> (273) 41
    T_INTEGER_VAL <intval> (274) 55
    T_IDENTIFIER <str> (275) 9 11 13 15 50 51 52 53
    T_DOUBLE_VAL <dval> (276) 54


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1 2 3
        on right: 0
    functions (37)
        on left: 4 5
        on right: 1 5
    function_declaration (38)
        on left: 9
        on right: 1 5
    $@1 (39)
        on left: 6
        on right: 9
    $@2 (40)
        on left: 7
        on right: 9
    $@3 (41)
        on left: 8
        on right: 9
    parameter_list (42)
        on left: 10 11
        on right: 9
    parameter_list_tail (43)
        on left: 12 13
        on right: 11 13
    midrule_lbs <lbVal> (44)
        on left: 14
        on right: 15
    function_call (45)
        on left: 15
        on right: 67
    argument_list (46)
        on left: 16 17
        on right: 15
    argument_list_tail (47)
        on left: 18 19
        on right: 17 19
    instructions (48)
        on left: 20 21 26 31 34
        on right: 2 9 21 26 31 34
    $@4 (49)
        on left: 22
        on right: 26
    $@5 (50)
        on left: 23
        on right: 26
    $@6 (51)
        on left: 24
        on right: 26
    $@7 (52)
        on left: 25
        on right: 26
    $@8 (53)
        on left: 27
        on right: 31
    $@9 (54)
        on left: 28
        on right: 31
    $@10 (55)
        on left: 29
        on right: 31
    $@11 (56)
        on left: 30
        on right: 31
    $@12 (57)
        on left: 32
        on right: 34
    $@13 (58)
        on left: 33
        on right: 34
    instruction (59)
        on left: 35 36 37 38 39 40 41
        on right: 21
    declarations (60)
        on left: 42 43
        on right: 37 43
    declaration (61)
        on left: 44
        on right: 42 43
    type (62)
        on left: 45 46 47
        on right: 9 11 13 44
    variable_list (63)
        on left: 48 49
        on right: 44 49
    variable_declaration (64)
        on left: 50 51
        on right: 48 49
    variable_load (65)
        on left: 52
        on right: 38
    expression <dval> (66)
        on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 17 19 26 31 36 51 52 56 57 58 59 60 61 62 63 64 65 66


State 0

    0 $accept: • program $end

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_ERROR          shift, and go to state 7
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    T_INT_KW     [reduce using rule 4 (functions)]
    T_FLOAT_KW   [reduce using rule 4 (functions)]
    T_DOUBLE_KW  [reduce using rule 4 (functions)]
    ';'          reduce using rule 35 (instruction)
    $default     reduce using rule 20 (instructions)

    program        go to state 13
    functions      go to state 14
    instructions   go to state 15
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 1

   45 type: T_INT_KW •

    $default  reduce using rule 45 (type)


State 2

   47 type: T_FLOAT_KW •

    $default  reduce using rule 47 (type)


State 3

   46 type: T_DOUBLE_KW •

    $default  reduce using rule 46 (type)


State 4

   26 instructions: T_IF_KW • '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

    '('  shift, and go to state 21


State 5

   31 instructions: T_WHILE_KW • $@8 '(' expression ')' $@9 '{' $@10 instructions '}' $@11 instructions

    $default  reduce using rule 27 ($@8)

    $@8  go to state 22


State 6

   36 instruction: T_RETURN • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 28


State 7

    3 program: T_ERROR •

    $default  reduce using rule 3 (program)


State 8

   40 instruction: T_PRINTF_PARAM •

    $default  reduce using rule 40 (instruction)


State 9

   39 instruction: T_PRINTF_SIMPLE •

    $default  reduce using rule 39 (instruction)


State 10

   41 instruction: T_SCANF •

    $default  reduce using rule 41 (instruction)


State 11

   52 variable_load: T_IDENTIFIER • '=' expression

    '='  shift, and go to state 29


State 12

   34 instructions: '{' • $@12 instructions '}' $@13 instructions

    $default  reduce using rule 32 ($@12)

    $@12  go to state 30


State 13

    0 $accept: program • $end

    $end  shift, and go to state 31


State 14

    1 program: functions • function_declaration
    5 functions: functions • function_declaration

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3

    function_declaration  go to state 32
    type                  go to state 33


State 15

    2 program: instructions •

    $default  reduce using rule 2 (program)


State 16

   21 instructions: instruction • ';' instructions

    ';'  shift, and go to state 34


State 17

   37 instruction: declarations •

    $default  reduce using rule 37 (instruction)


State 18

   42 declarations: declaration •
   43             | declaration • declarations

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3

    $default  reduce using rule 42 (declarations)

    declarations  go to state 35
    declaration   go to state 18
    type          go to state 19


State 19

   44 declaration: type • variable_list

    T_IDENTIFIER  shift, and go to state 36

    variable_list         go to state 37
    variable_declaration  go to state 38


State 20

   38 instruction: variable_load •

    $default  reduce using rule 38 (instruction)


State 21

   26 instructions: T_IF_KW '(' • expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 39


State 22

   31 instructions: T_WHILE_KW $@8 • '(' expression ')' $@9 '{' $@10 instructions '}' $@11 instructions

    '('  shift, and go to state 40


State 23

   55 expression: T_INTEGER_VAL •

    $default  reduce using rule 55 (expression)


State 24

   15 function_call: T_IDENTIFIER • midrule_lbs '(' argument_list ')'
   53 expression: T_IDENTIFIER •

    '('       reduce using rule 14 (midrule_lbs)
    $default  reduce using rule 53 (expression)

    midrule_lbs  go to state 41


State 25

   54 expression: T_DOUBLE_VAL •

    $default  reduce using rule 54 (expression)


State 26

   66 expression: '(' • expression ')'

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 42


State 27

   67 expression: function_call •

    $default  reduce using rule 67 (expression)


State 28

   36 instruction: T_RETURN expression •
   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    T_EQ   shift, and go to state 43
    T_LE   shift, and go to state 44
    T_GE   shift, and go to state 45
    T_NEQ  shift, and go to state 46
    '+'    shift, and go to state 47
    '-'    shift, and go to state 48
    '>'    shift, and go to state 49
    '<'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52

    $default  reduce using rule 36 (instruction)


State 29

   52 variable_load: T_IDENTIFIER '=' • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 53


State 30

   34 instructions: '{' $@12 • instructions '}' $@13 instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 54
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 31

    0 $accept: program $end •

    $default  accept


State 32

    1 program: functions function_declaration •
    5 functions: functions function_declaration •

    $end      reduce using rule 1 (program)
    $default  reduce using rule 5 (functions)


State 33

    9 function_declaration: type • T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 instructions '}'

    T_IDENTIFIER  shift, and go to state 55


State 34

   21 instructions: instruction ';' • instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 56
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 35

   43 declarations: declaration declarations •

    $default  reduce using rule 43 (declarations)


State 36

   50 variable_declaration: T_IDENTIFIER •
   51                     | T_IDENTIFIER • '=' expression

    '='  shift, and go to state 57

    $default  reduce using rule 50 (variable_declaration)


State 37

   44 declaration: type variable_list •

    $default  reduce using rule 44 (declaration)


State 38

   48 variable_list: variable_declaration •
   49              | variable_declaration • ',' variable_list

    ','  shift, and go to state 58

    $default  reduce using rule 48 (variable_list)


State 39

   26 instructions: T_IF_KW '(' expression • ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions
   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    T_EQ   shift, and go to state 43
    T_LE   shift, and go to state 44
    T_GE   shift, and go to state 45
    T_NEQ  shift, and go to state 46
    '+'    shift, and go to state 47
    '-'    shift, and go to state 48
    '>'    shift, and go to state 49
    '<'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52
    ')'    shift, and go to state 59


State 40

   31 instructions: T_WHILE_KW $@8 '(' • expression ')' $@9 '{' $@10 instructions '}' $@11 instructions

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 60


State 41

   15 function_call: T_IDENTIFIER midrule_lbs • '(' argument_list ')'

    '('  shift, and go to state 61


State 42

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression
   66           | '(' expression • ')'

    T_EQ   shift, and go to state 43
    T_LE   shift, and go to state 44
    T_GE   shift, and go to state 45
    T_NEQ  shift, and go to state 46
    '+'    shift, and go to state 47
    '-'    shift, and go to state 48
    '>'    shift, and go to state 49
    '<'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52
    ')'    shift, and go to state 62


State 43

   64 expression: expression T_EQ • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 63


State 44

   61 expression: expression T_LE • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 64


State 45

   63 expression: expression T_GE • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 65


State 46

   65 expression: expression T_NEQ • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 66


State 47

   56 expression: expression '+' • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 67


State 48

   57 expression: expression '-' • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 68


State 49

   62 expression: expression '>' • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 69


State 50

   60 expression: expression '<' • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 70


State 51

   58 expression: expression '*' • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 71


State 52

   59 expression: expression '/' • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 72


State 53

   52 variable_load: T_IDENTIFIER '=' expression •
   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    T_EQ   shift, and go to state 43
    T_LE   shift, and go to state 44
    T_GE   shift, and go to state 45
    T_NEQ  shift, and go to state 46
    '+'    shift, and go to state 47
    '-'    shift, and go to state 48
    '>'    shift, and go to state 49
    '<'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52

    $default  reduce using rule 52 (variable_load)


State 54

   34 instructions: '{' $@12 instructions • '}' $@13 instructions

    '}'  shift, and go to state 73


State 55

    9 function_declaration: type T_IDENTIFIER • $@1 '(' $@2 parameter_list ')' '{' $@3 instructions '}'

    $default  reduce using rule 6 ($@1)

    $@1  go to state 74


State 56

   21 instructions: instruction ';' instructions •

    $default  reduce using rule 21 (instructions)


State 57

   51 variable_declaration: T_IDENTIFIER '=' • expression

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 75


State 58

   49 variable_list: variable_declaration ',' • variable_list

    T_IDENTIFIER  shift, and go to state 36

    variable_list         go to state 76
    variable_declaration  go to state 38


State 59

   26 instructions: T_IF_KW '(' expression ')' • $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

    $default  reduce using rule 22 ($@4)

    $@4  go to state 77


State 60

   31 instructions: T_WHILE_KW $@8 '(' expression • ')' $@9 '{' $@10 instructions '}' $@11 instructions
   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    T_EQ   shift, and go to state 43
    T_LE   shift, and go to state 44
    T_GE   shift, and go to state 45
    T_NEQ  shift, and go to state 46
    '+'    shift, and go to state 47
    '-'    shift, and go to state 48
    '>'    shift, and go to state 49
    '<'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52
    ')'    shift, and go to state 78


State 61

   15 function_call: T_IDENTIFIER midrule_lbs '(' • argument_list ')'

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 16 (argument_list)

    function_call  go to state 27
    argument_list  go to state 79
    expression     go to state 80


State 62

   66 expression: '(' expression ')' •

    $default  reduce using rule 66 (expression)


State 63

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   64           | expression T_EQ expression •
   65           | expression • T_NEQ expression

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 64 (expression)


State 64

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   61           | expression T_LE expression •
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 61 (expression)


State 65

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   63           | expression T_GE expression •
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 63 (expression)


State 66

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression
   65           | expression T_NEQ expression •

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 65 (expression)


State 67

   56 expression: expression • '+' expression
   56           | expression '+' expression •
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 56 (expression)


State 68

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   57           | expression '-' expression •
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 57 (expression)


State 69

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   62           | expression '>' expression •
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 62 (expression)


State 70

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   60           | expression '<' expression •
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 60 (expression)


State 71

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   58           | expression '*' expression •
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    $default  reduce using rule 58 (expression)


State 72

   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   59           | expression '/' expression •
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    $default  reduce using rule 59 (expression)


State 73

   34 instructions: '{' $@12 instructions '}' • $@13 instructions

    $default  reduce using rule 33 ($@13)

    $@13  go to state 81


State 74

    9 function_declaration: type T_IDENTIFIER $@1 • '(' $@2 parameter_list ')' '{' $@3 instructions '}'

    '('  shift, and go to state 82


State 75

   51 variable_declaration: T_IDENTIFIER '=' expression •
   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    T_EQ   shift, and go to state 43
    T_LE   shift, and go to state 44
    T_GE   shift, and go to state 45
    T_NEQ  shift, and go to state 46
    '+'    shift, and go to state 47
    '-'    shift, and go to state 48
    '>'    shift, and go to state 49
    '<'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52

    $default  reduce using rule 51 (variable_declaration)


State 76

   49 variable_list: variable_declaration ',' variable_list •

    $default  reduce using rule 49 (variable_list)


State 77

   26 instructions: T_IF_KW '(' expression ')' $@4 • '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

    '{'  shift, and go to state 83


State 78

   31 instructions: T_WHILE_KW $@8 '(' expression ')' • $@9 '{' $@10 instructions '}' $@11 instructions

    $default  reduce using rule 28 ($@9)

    $@9  go to state 84


State 79

   15 function_call: T_IDENTIFIER midrule_lbs '(' argument_list • ')'

    ')'  shift, and go to state 85


State 80

   17 argument_list: expression • argument_list_tail
   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    T_EQ   shift, and go to state 43
    T_LE   shift, and go to state 44
    T_GE   shift, and go to state 45
    T_NEQ  shift, and go to state 46
    '+'    shift, and go to state 47
    '-'    shift, and go to state 48
    '>'    shift, and go to state 49
    '<'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52
    ','    shift, and go to state 86

    $default  reduce using rule 18 (argument_list_tail)

    argument_list_tail  go to state 87


State 81

   34 instructions: '{' $@12 instructions '}' $@13 • instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 88
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 82

    9 function_declaration: type T_IDENTIFIER $@1 '(' • $@2 parameter_list ')' '{' $@3 instructions '}'

    $default  reduce using rule 7 ($@2)

    $@2  go to state 89


State 83

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' • instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 90
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 84

   31 instructions: T_WHILE_KW $@8 '(' expression ')' $@9 • '{' $@10 instructions '}' $@11 instructions

    '{'  shift, and go to state 91


State 85

   15 function_call: T_IDENTIFIER midrule_lbs '(' argument_list ')' •

    $default  reduce using rule 15 (function_call)


State 86

   19 argument_list_tail: ',' • expression argument_list_tail

    T_INTEGER_VAL  shift, and go to state 23
    T_IDENTIFIER   shift, and go to state 24
    T_DOUBLE_VAL   shift, and go to state 25
    '('            shift, and go to state 26

    function_call  go to state 27
    expression     go to state 92


State 87

   17 argument_list: expression argument_list_tail •

    $default  reduce using rule 17 (argument_list)


State 88

   34 instructions: '{' $@12 instructions '}' $@13 instructions •

    $default  reduce using rule 34 (instructions)


State 89

    9 function_declaration: type T_IDENTIFIER $@1 '(' $@2 • parameter_list ')' '{' $@3 instructions '}'

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3

    $default  reduce using rule 10 (parameter_list)

    parameter_list  go to state 93
    type            go to state 94


State 90

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions • '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

    '}'  shift, and go to state 95


State 91

   31 instructions: T_WHILE_KW $@8 '(' expression ')' $@9 '{' • $@10 instructions '}' $@11 instructions

    $default  reduce using rule 29 ($@10)

    $@10  go to state 96


State 92

   19 argument_list_tail: ',' expression • argument_list_tail
   56 expression: expression • '+' expression
   57           | expression • '-' expression
   58           | expression • '*' expression
   59           | expression • '/' expression
   60           | expression • '<' expression
   61           | expression • T_LE expression
   62           | expression • '>' expression
   63           | expression • T_GE expression
   64           | expression • T_EQ expression
   65           | expression • T_NEQ expression

    T_EQ   shift, and go to state 43
    T_LE   shift, and go to state 44
    T_GE   shift, and go to state 45
    T_NEQ  shift, and go to state 46
    '+'    shift, and go to state 47
    '-'    shift, and go to state 48
    '>'    shift, and go to state 49
    '<'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52
    ','    shift, and go to state 86

    $default  reduce using rule 18 (argument_list_tail)

    argument_list_tail  go to state 97


State 93

    9 function_declaration: type T_IDENTIFIER $@1 '(' $@2 parameter_list • ')' '{' $@3 instructions '}'

    ')'  shift, and go to state 98


State 94

   11 parameter_list: type • T_IDENTIFIER parameter_list_tail

    T_IDENTIFIER  shift, and go to state 99


State 95

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' • $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

    $default  reduce using rule 23 ($@5)

    $@5  go to state 100


State 96

   31 instructions: T_WHILE_KW $@8 '(' expression ')' $@9 '{' $@10 • instructions '}' $@11 instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 101
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 97

   19 argument_list_tail: ',' expression argument_list_tail •

    $default  reduce using rule 19 (argument_list_tail)


State 98

    9 function_declaration: type T_IDENTIFIER $@1 '(' $@2 parameter_list ')' • '{' $@3 instructions '}'

    '{'  shift, and go to state 102


State 99

   11 parameter_list: type T_IDENTIFIER • parameter_list_tail

    ','  shift, and go to state 103

    $default  reduce using rule 12 (parameter_list_tail)

    parameter_list_tail  go to state 104


State 100

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 • T_ELSE_KW $@6 '{' instructions '}' $@7 instructions

    T_ELSE_KW  shift, and go to state 105


State 101

   31 instructions: T_WHILE_KW $@8 '(' expression ')' $@9 '{' $@10 instructions • '}' $@11 instructions

    '}'  shift, and go to state 106


State 102

    9 function_declaration: type T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' • $@3 instructions '}'

    $default  reduce using rule 8 ($@3)

    $@3  go to state 107


State 103

   13 parameter_list_tail: ',' • type T_IDENTIFIER parameter_list_tail

    T_INT_KW     shift, and go to state 1
    T_FLOAT_KW   shift, and go to state 2
    T_DOUBLE_KW  shift, and go to state 3

    type  go to state 108


State 104

   11 parameter_list: type T_IDENTIFIER parameter_list_tail •

    $default  reduce using rule 11 (parameter_list)


State 105

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW • $@6 '{' instructions '}' $@7 instructions

    $default  reduce using rule 24 ($@6)

    $@6  go to state 109


State 106

   31 instructions: T_WHILE_KW $@8 '(' expression ')' $@9 '{' $@10 instructions '}' • $@11 instructions

    $default  reduce using rule 30 ($@11)

    $@11  go to state 110


State 107

    9 function_declaration: type T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 • instructions '}'

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 111
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 108

   13 parameter_list_tail: ',' type • T_IDENTIFIER parameter_list_tail

    T_IDENTIFIER  shift, and go to state 112


State 109

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 • '{' instructions '}' $@7 instructions

    '{'  shift, and go to state 113


State 110

   31 instructions: T_WHILE_KW $@8 '(' expression ')' $@9 '{' $@10 instructions '}' $@11 • instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 114
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 111

    9 function_declaration: type T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 instructions • '}'

    '}'  shift, and go to state 115


State 112

   13 parameter_list_tail: ',' type T_IDENTIFIER • parameter_list_tail

    ','  shift, and go to state 103

    $default  reduce using rule 12 (parameter_list_tail)

    parameter_list_tail  go to state 116


State 113

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' • instructions '}' $@7 instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 117
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 114

   31 instructions: T_WHILE_KW $@8 '(' expression ')' $@9 '{' $@10 instructions '}' $@11 instructions •

    $default  reduce using rule 31 (instructions)


State 115

    9 function_declaration: type T_IDENTIFIER $@1 '(' $@2 parameter_list ')' '{' $@3 instructions '}' •

    $default  reduce using rule 9 (function_declaration)


State 116

   13 parameter_list_tail: ',' type T_IDENTIFIER parameter_list_tail •

    $default  reduce using rule 13 (parameter_list_tail)


State 117

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions • '}' $@7 instructions

    '}'  shift, and go to state 118


State 118

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' • $@7 instructions

    $default  reduce using rule 25 ($@7)

    $@7  go to state 119


State 119

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 • instructions

    T_INT_KW         shift, and go to state 1
    T_FLOAT_KW       shift, and go to state 2
    T_DOUBLE_KW      shift, and go to state 3
    T_IF_KW          shift, and go to state 4
    T_WHILE_KW       shift, and go to state 5
    T_RETURN         shift, and go to state 6
    T_PRINTF_PARAM   shift, and go to state 8
    T_PRINTF_SIMPLE  shift, and go to state 9
    T_SCANF          shift, and go to state 10
    T_IDENTIFIER     shift, and go to state 11
    '{'              shift, and go to state 12

    ';'       reduce using rule 35 (instruction)
    $default  reduce using rule 20 (instructions)

    instructions   go to state 120
    instruction    go to state 16
    declarations   go to state 17
    declaration    go to state 18
    type           go to state 19
    variable_load  go to state 20


State 120

   26 instructions: T_IF_KW '(' expression ')' $@4 '{' instructions '}' $@5 T_ELSE_KW $@6 '{' instructions '}' $@7 instructions •

    $default  reduce using rule 26 (instructions)
